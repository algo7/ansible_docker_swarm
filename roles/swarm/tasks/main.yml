# code: language=ansible
---
- name: Check if Docker Swarm is already initialized
  ansible.builtin.command:
    cmd: docker info --format '{{ '{{.Swarm.LocalNodeState}}' }}'
  register: swarm_status
  changed_when: false

- name: Create group initialized_managers
  ansible.builtin.add_host:
    name: '{{ item }}'
    groups: initialized_managers
  loop: '{{ groups["swarm_managers"] }}'
  when:
    - hostvars[item]['swarm_status'].stdout == 'active'

- name: Create group uninitialized_managers
  ansible.builtin.add_host:
    name: '{{ item }}'
    groups: uninitialized_managers
  loop: '{{ groups["swarm_managers"] }}'
  when:
    - hostvars[item]['swarm_status'].stdout == 'inactive'

- name: Create group initialized_workers
  ansible.builtin.add_host:
    name: '{{ item }}'
    groups: initialized_workers
  loop: '{{ groups["swarm_workers"] }}'
  when:
    - hostvars[item]['swarm_status'].stdout == 'active'

- name: Create group uninitialized_workers
  ansible.builtin.add_host:
    name: '{{ item }}'
    groups: uninitialized_workers
  loop: '{{ groups["swarm_workers"] }}'
  when:
    - hostvars[item]['swarm_status'].stdout == 'inactive'

- name: Initialize Docker Swarm on the first uninitialized manager if no managers are initialized
  ansible.builtin.command:
    cmd: docker swarm init --advertise-addr {{ hostvars[groups['uninitialized_managers'][0]]['ansible_default_ipv4']['address'] }}
  when:
    - 'groups["initialized_managers"] is not defined'
    - inventory_hostname == groups['uninitialized_managers'][0]
  changed_when: false

- name: Add first uninitialized manager to initialized_managers group
  ansible.builtin.add_host:
    name: "{{ groups['uninitialized_managers'][0] }}"
    groups: initialized_managers
  when:
    - 'groups["uninitialized_managers"] is defined'
    - inventory_hostname == groups['uninitialized_managers'][0]
  changed_when: false

- name: Get Docker Swarm manager join token
  ansible.builtin.command:
    cmd: docker swarm join-token manager -q
  register: manager_join_token
  when:
    - 'groups["uninitialized_managers"] is defined'
    - inventory_hostname == groups['initialized_managers'][0]
  changed_when: false
  run_once: true

- name: Get Docker Swarm worker join token
  ansible.builtin.command:
    cmd: docker swarm join-token worker -q
  register: worker_join_token
  when:
    - 'groups["uninitialized_workers"] is defined'
    - inventory_hostname == groups['initialized_managers'][0]
  changed_when: false
  run_once: true

- name: Update Swarm initialization status
  ansible.builtin.command:
    cmd: docker info --format '{{ '{{.Swarm.LocalNodeState}}' }}'
  register: swarm_status
  changed_when: false

- name: Enroll uninitialized managers
  ansible.builtin.command:
    cmd: docker swarm join --token {{ manager_join_token.stdout }} {{ hostvars[groups['initialized_managers'][0]]['ansible_default_ipv4']['address'] }}:2377
  when:
    - 'groups["uninitialized_managers"] is defined'
    - inventory_hostname in groups['uninitialized_managers']
    - hostvars[inventory_hostname]['swarm_status'].stdout == 'inactive'
  changed_when: false

- name: Enroll uninitialized workers
  ansible.builtin.command:
    cmd: docker swarm join --token {{ worker_join_token.stdout }} {{ hostvars[groups['initialized_managers'][0]]['ansible_default_ipv4']['address'] }}:2377
  when:
    - 'groups["uninitialized_workers"] is defined'
    - inventory_hostname in groups['uninitialized_workers']
  changed_when: false
